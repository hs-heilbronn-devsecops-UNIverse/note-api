# This workflow will install Python dependencies, run tests, and lint with a single version of Python.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  

permissions:
  contents: read
  actions: read                 # Allows reading actions and workflows
  security-events: write        # Allows uploading SARIF files


jobs:
  lint-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

    # Uncomment the following lines to enable linting
    # - name: Lint with flake8
    #   run: |
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with coverage (optional)
      run: |
        # Run tests with coverage in parallel, provide feedback immediately
        pytest --cov=note_api --cov-report=term --cov-report=xml --maxfail=5 -n auto
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: false


  snyk-test:
    if: github.event.pull_request.merged == true && github.ref == 'refs/heads/main' || github.event_name == 'push' && github.ref == 'refs/heads/main'      #if merge request to main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4  
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.10@master  
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif
  
  # dependent on snyk-test
  build-and-push-image:
    if: github.event.pull_request.merged == true && github.ref == 'refs/heads/main' || github.event_name == 'push' && github.ref == 'refs/heads/main'      #if merge request to main
    needs: snyk-test, lint-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build and push Docker image
      env:
        CONTAINER_TOKEN: ${{ secrets.CONTAINER_TOKEN }}
      run: |
        # Step 1: Build the Docker image and tag it
        docker build -t ghcr.io/hs-heilbronn-devsecops-universe/note-api:latest .

        # Step 2: Log in to the GitHub Container Registry
        echo $CONTAINER_TOKEN | docker login ghcr.io -u hs-heilbronn-devsecops-universe --password-stdin

        # Step 3: Push the Docker image to the registry
        docker push ghcr.io/hs-heilbronn-devsecops-universe/note-api:latest